{
  "hash": "2e42485dc07f64953f75ee69739c9381",
  "result": {
    "markdown": "---\ntitle: \"Managing data with tidyverse\"\nauthor: \"Wonjun Choi\"\ndate: \"2023-03-10\"\ncategories: [R, open data analysis]\nsubtitle: \"Open Data Analysis ch02\"\nimage: \"tidyverse.png\"\n---\n\n\n## Data transformation\n\n### Import libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nycflights13)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.0     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.1.8\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n### nycflights13\n\n::: {.cell}\n\n```{.r .cell-code}\nflights\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1     1      517        515       2     830     819      11 UA     \n 2  2013     1     1      533        529       4     850     830      20 UA     \n 3  2013     1     1      542        540       2     923     850      33 AA     \n 4  2013     1     1      544        545      -1    1004    1022     -18 B6     \n 5  2013     1     1      554        600      -6     812     837     -25 DL     \n 6  2013     1     1      554        558      -4     740     728      12 UA     \n 7  2013     1     1      555        600      -5     913     854      19 B6     \n 8  2013     1     1      557        600      -3     709     723     -14 EV     \n 9  2013     1     1      557        600      -3     838     846      -8 B6     \n10  2013     1     1      558        600      -2     753     745       8 AA     \n# … with 336,766 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nView(flights)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(flights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [336,776 × 19] (S3: tbl_df/tbl/data.frame)\n $ year          : int [1:336776] 2013 2013 2013 2013 2013 2013 2013 2013 2013 2013 ...\n $ month         : int [1:336776] 1 1 1 1 1 1 1 1 1 1 ...\n $ day           : int [1:336776] 1 1 1 1 1 1 1 1 1 1 ...\n $ dep_time      : int [1:336776] 517 533 542 544 554 554 555 557 557 558 ...\n $ sched_dep_time: int [1:336776] 515 529 540 545 600 558 600 600 600 600 ...\n $ dep_delay     : num [1:336776] 2 4 2 -1 -6 -4 -5 -3 -3 -2 ...\n $ arr_time      : int [1:336776] 830 850 923 1004 812 740 913 709 838 753 ...\n $ sched_arr_time: int [1:336776] 819 830 850 1022 837 728 854 723 846 745 ...\n $ arr_delay     : num [1:336776] 11 20 33 -18 -25 12 19 -14 -8 8 ...\n $ carrier       : chr [1:336776] \"UA\" \"UA\" \"AA\" \"B6\" ...\n $ flight        : int [1:336776] 1545 1714 1141 725 461 1696 507 5708 79 301 ...\n $ tailnum       : chr [1:336776] \"N14228\" \"N24211\" \"N619AA\" \"N804JB\" ...\n $ origin        : chr [1:336776] \"EWR\" \"LGA\" \"JFK\" \"JFK\" ...\n $ dest          : chr [1:336776] \"IAH\" \"IAH\" \"MIA\" \"BQN\" ...\n $ air_time      : num [1:336776] 227 227 160 183 116 150 158 53 140 138 ...\n $ distance      : num [1:336776] 1400 1416 1089 1576 762 ...\n $ hour          : num [1:336776] 5 5 5 5 6 5 6 6 6 6 ...\n $ minute        : num [1:336776] 15 29 40 45 0 58 0 0 0 0 ...\n $ time_hour     : POSIXct[1:336776], format: \"2013-01-01 05:00:00\" \"2013-01-01 05:00:00\" ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(flights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"year\"           \"month\"          \"day\"            \"dep_time\"      \n [5] \"sched_dep_time\" \"dep_delay\"      \"arr_time\"       \"sched_arr_time\"\n [9] \"arr_delay\"      \"carrier\"        \"flight\"         \"tailnum\"       \n[13] \"origin\"         \"dest\"           \"air_time\"       \"distance\"      \n[17] \"hour\"           \"minute\"         \"time_hour\"     \n```\n:::\n:::\n\n\n### dplyr basics\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(flights$month)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n    1     2     3     4     5     6     7     8     9    10    11    12 \n27004 24951 28834 28330 28796 28243 29425 29327 27574 28889 27268 28135 \n```\n:::\n\n```{.r .cell-code}\nnov_dec <- flights %>% filter(month %in% c(11, 12))\ntable(nov_dec$month)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   11    12 \n27268 28135 \n```\n:::\n\n```{.r .cell-code}\nnov_dec2 <- flights %>% filter(month == 12 | month == 11)\ntable(nov_dec2$month)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   11    12 \n27268 28135 \n```\n:::\n:::\n\n\n### Missing values\n\n::: {.cell}\n\n```{.r .cell-code}\nflights <- flights\nNA\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nNA > 5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\n10 == NA\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nNA + 10\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nNA / 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- NA\n\nis.na(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\n# dep_time의 결측치가 몇개인지 출력\nis.na(flights$dep_time) %>% sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8255\n```\n:::\n\n```{.r .cell-code}\nsum(is.na(flights$dep_time))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8255\n```\n:::\n\n```{.r .cell-code}\nflights$dep_time %>% is.na() %>% sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8255\n```\n:::\n\n```{.r .cell-code}\nflights %>% pull(dep_time) %>% is.na %>% sum\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8255\n```\n:::\n:::\n\n\nQuestion: dep_time의 결측치를 dep_time의 평균값으로 교체\n\n::: {.cell}\n\n```{.r .cell-code}\n# replace_na\nmean_dep_time <- mean(flights$dep_time, na.rm = T) %>% as.integer()\n\nflights_na_replace <- flights %>% \n  replace_na(list(dep_time = mean_dep_time))\n\n# mutate\nflights_na_replace_m <- flights %>% \n  mutate(dep_time = ifelse(is.na(dep_time), \n                           mean_dep_time,\n                           dep_time))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(x = c(1, NA, 3))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   x\n1  1\n2 NA\n3  3\n```\n:::\n\n```{.r .cell-code}\nclass(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"data.frame\"\n```\n:::\n\n```{.r .cell-code}\ndf <- tibble(x = c(1, NA, 3))\nclass(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n:::\n\n```{.r .cell-code}\ndf %>% filter(x > 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n      x\n  <dbl>\n1     3\n```\n:::\n\n```{.r .cell-code}\ndf %>% filter(is.na(x) | x > 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 1\n      x\n  <dbl>\n1    NA\n2     3\n```\n:::\n\n```{.r .cell-code}\n# NA를 지우고 싶을 때\ndf %>%  drop_na(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 1\n      x\n  <dbl>\n1     1\n2     3\n```\n:::\n\n```{.r .cell-code}\ndf2 <- tibble(x = c(1, 2, NA), y = c(\"a\", NA, \"b\"))\ndf2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n      x y    \n  <dbl> <chr>\n1     1 a    \n2     2 <NA> \n3    NA b    \n```\n:::\n\n```{.r .cell-code}\ndf2 %>% drop_na()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n      x y    \n  <dbl> <chr>\n1     1 a    \n```\n:::\n\n```{.r .cell-code}\ndf2$y <- NULL\n```\n:::\n\n\n## Arrange rows with `arrange()`\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% arrange(dep_time)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1    13        1       2249      72     108    2357      71 B6     \n 2  2013     1    31        1       2100     181     124    2225     179 WN     \n 3  2013    11    13        1       2359       2     442     440       2 B6     \n 4  2013    12    16        1       2359       2     447     437      10 B6     \n 5  2013    12    20        1       2359       2     430     440     -10 B6     \n 6  2013    12    26        1       2359       2     437     440      -3 B6     \n 7  2013    12    30        1       2359       2     441     437       4 B6     \n 8  2013     2    11        1       2100     181     111    2225     166 WN     \n 9  2013     2    24        1       2245      76     121    2354      87 B6     \n10  2013     3     8        1       2355       6     431     440      -9 B6     \n# … with 336,766 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n:::\n\n\n결측치는 항상 하단에 정렬:\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- tibble(x = c(5, 2, NA))\narrange(df, x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 1\n      x\n  <dbl>\n1     2\n2     5\n3    NA\n```\n:::\n\n```{.r .cell-code}\narrange(df, desc(x))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 1\n      x\n  <dbl>\n1     5\n2     2\n3    NA\n```\n:::\n:::\n\n\n### Select columns with `select()`\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% select(year, month, day)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 3\n    year month   day\n   <int> <int> <int>\n 1  2013     1     1\n 2  2013     1     1\n 3  2013     1     1\n 4  2013     1     1\n 5  2013     1     1\n 6  2013     1     1\n 7  2013     1     1\n 8  2013     1     1\n 9  2013     1     1\n10  2013     1     1\n# … with 336,766 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% select(year:day)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 3\n    year month   day\n   <int> <int> <int>\n 1  2013     1     1\n 2  2013     1     1\n 3  2013     1     1\n 4  2013     1     1\n 5  2013     1     1\n 6  2013     1     1\n 7  2013     1     1\n 8  2013     1     1\n 9  2013     1     1\n10  2013     1     1\n# … with 336,766 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nselect(flights, -(year:day))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 16\n   dep_t…¹ sched…² dep_d…³ arr_t…⁴ sched…⁵ arr_d…⁶ carrier flight tailnum origin\n     <int>   <int>   <dbl>   <int>   <int>   <dbl> <chr>    <int> <chr>   <chr> \n 1     517     515       2     830     819      11 UA        1545 N14228  EWR   \n 2     533     529       4     850     830      20 UA        1714 N24211  LGA   \n 3     542     540       2     923     850      33 AA        1141 N619AA  JFK   \n 4     544     545      -1    1004    1022     -18 B6         725 N804JB  JFK   \n 5     554     600      -6     812     837     -25 DL         461 N668DN  LGA   \n 6     554     558      -4     740     728      12 UA        1696 N39463  EWR   \n 7     555     600      -5     913     854      19 B6         507 N516JB  EWR   \n 8     557     600      -3     709     723     -14 EV        5708 N829AS  LGA   \n 9     557     600      -3     838     846      -8 B6          79 N593JB  JFK   \n10     558     600      -2     753     745       8 AA         301 N3ALAA  LGA   \n# … with 336,766 more rows, 6 more variables: dest <chr>, air_time <dbl>,\n#   distance <dbl>, hour <dbl>, minute <dbl>, time_hour <dttm>, and abbreviated\n#   variable names ¹​dep_time, ²​sched_dep_time, ³​dep_delay, ⁴​arr_time,\n#   ⁵​sched_arr_time, ⁶​arr_delay\n```\n:::\n:::\n\n\nThere are a number of helper functions you can use within `select()`:\n- `starts_with(\"abc\")`: matches names that begin with \"abc\".\n- `ends_with(\"time\")`: matches names that end with \"xyz\".\n- `contains(\"time\")`: matches names that contain \"ijk\".\n- `num_range(\"x\", 1:3): matches `x1`, `x2`, and `x3`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc(\"x1\", \"x2\", \"x3\", \"y1\", \"y2\", \"y3\", \"y4\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"x1\" \"x2\" \"x3\" \"y1\" \"y2\" \"y3\" \"y4\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% select(new_year = year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 1\n   new_year\n      <int>\n 1     2013\n 2     2013\n 3     2013\n 4     2013\n 5     2013\n 6     2013\n 7     2013\n 8     2013\n 9     2013\n10     2013\n# … with 336,766 more rows\n```\n:::\n\n```{.r .cell-code}\nflights %>% rename(tail_num = tailnum, new_year = year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 19\n   new_year month   day dep_time sched…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n      <int> <int> <int>    <int>   <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1     2013     1     1      517     515       2     830     819      11 UA     \n 2     2013     1     1      533     529       4     850     830      20 UA     \n 3     2013     1     1      542     540       2     923     850      33 AA     \n 4     2013     1     1      544     545      -1    1004    1022     -18 B6     \n 5     2013     1     1      554     600      -6     812     837     -25 DL     \n 6     2013     1     1      554     558      -4     740     728      12 UA     \n 7     2013     1     1      555     600      -5     913     854      19 B6     \n 8     2013     1     1      557     600      -3     709     723     -14 EV     \n 9     2013     1     1      557     600      -3     838     846      -8 B6     \n10     2013     1     1      558     600      -2     753     745       8 AA     \n# … with 336,766 more rows, 9 more variables: flight <int>, tail_num <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 컬럼 위치 이동 (time_hour, air_time 맨 앞으로 이동)\nflights %>% select(time_hour, air_time, everything())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 19\n   time_hour           air_t…¹  year month   day dep_t…² sched…³ dep_d…⁴ arr_t…⁵\n   <dttm>                <dbl> <int> <int> <int>   <int>   <int>   <dbl>   <int>\n 1 2013-01-01 05:00:00     227  2013     1     1     517     515       2     830\n 2 2013-01-01 05:00:00     227  2013     1     1     533     529       4     850\n 3 2013-01-01 05:00:00     160  2013     1     1     542     540       2     923\n 4 2013-01-01 05:00:00     183  2013     1     1     544     545      -1    1004\n 5 2013-01-01 06:00:00     116  2013     1     1     554     600      -6     812\n 6 2013-01-01 05:00:00     150  2013     1     1     554     558      -4     740\n 7 2013-01-01 06:00:00     158  2013     1     1     555     600      -5     913\n 8 2013-01-01 06:00:00      53  2013     1     1     557     600      -3     709\n 9 2013-01-01 06:00:00     140  2013     1     1     557     600      -3     838\n10 2013-01-01 06:00:00     138  2013     1     1     558     600      -2     753\n# … with 336,766 more rows, 10 more variables: sched_arr_time <int>,\n#   arr_delay <dbl>, carrier <chr>, flight <int>, tailnum <chr>, origin <chr>,\n#   dest <chr>, distance <dbl>, hour <dbl>, minute <dbl>, and abbreviated\n#   variable names ¹​air_time, ²​dep_time, ³​sched_dep_time, ⁴​dep_delay, ⁵​arr_time\n```\n:::\n:::\n\n\n- `contains`\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% select(contains(\"time\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 6\n   dep_time sched_dep_time arr_time sched_arr_time air_time time_hour          \n      <int>          <int>    <int>          <int>    <dbl> <dttm>             \n 1      517            515      830            819      227 2013-01-01 05:00:00\n 2      533            529      850            830      227 2013-01-01 05:00:00\n 3      542            540      923            850      160 2013-01-01 05:00:00\n 4      544            545     1004           1022      183 2013-01-01 05:00:00\n 5      554            600      812            837      116 2013-01-01 06:00:00\n 6      554            558      740            728      150 2013-01-01 05:00:00\n 7      555            600      913            854      158 2013-01-01 06:00:00\n 8      557            600      709            723       53 2013-01-01 06:00:00\n 9      557            600      838            846      140 2013-01-01 06:00:00\n10      558            600      753            745      138 2013-01-01 06:00:00\n# … with 336,766 more rows\n```\n:::\n:::\n\n\n## Add new variables with `mutate()`\n\n::: {.cell}\n\n```{.r .cell-code}\n# transmute 사용\nflights %>% transmute(\n  gain = dep_delay - arr_delay,\n  hours = air_time / 60,\n  gain_per_hour = gain / hours\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 3\n    gain hours gain_per_hour\n   <dbl> <dbl>         <dbl>\n 1    -9 3.78          -2.38\n 2   -16 3.78          -4.23\n 3   -31 2.67         -11.6 \n 4    17 3.05           5.57\n 5    19 1.93           9.83\n 6   -16 2.5           -6.4 \n 7   -24 2.63          -9.11\n 8    11 0.883         12.5 \n 9     5 2.33           2.14\n10   -10 2.3           -4.35\n# … with 336,766 more rows\n```\n:::\n\n```{.r .cell-code}\n# mutate & select 사용\nflights %>%\n  mutate(\n    gain = dep_delay - arr_delay,\n    hours = air_time / 60,\n    gain_per_hour = gain / hours\n  ) %>%\n  select(gain, hour, gain_per_hour)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 3\n    gain  hour gain_per_hour\n   <dbl> <dbl>         <dbl>\n 1    -9     5         -2.38\n 2   -16     5         -4.23\n 3   -31     5        -11.6 \n 4    17     5          5.57\n 5    19     6          9.83\n 6   -16     5         -6.4 \n 7   -24     6         -9.11\n 8    11     6         12.5 \n 9     5     6          2.14\n10   -10     6         -4.35\n# … with 336,766 more rows\n```\n:::\n\n```{.r .cell-code}\n# 새로운 컬럼을 원하는 위치에 생성\nflights %>%\n  mutate(\n    gain = dep_delay - arr_delay,\n    hours = air_time / 60,\n    gain_per_hour = gain / hours,\n    .after = year\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 22\n    year  gain hours gain_…¹ month   day dep_t…² sched…³ dep_d…⁴ arr_t…⁵ sched…⁶\n   <int> <dbl> <dbl>   <dbl> <int> <int>   <int>   <int>   <dbl>   <int>   <int>\n 1  2013    -9 3.78    -2.38     1     1     517     515       2     830     819\n 2  2013   -16 3.78    -4.23     1     1     533     529       4     850     830\n 3  2013   -31 2.67   -11.6      1     1     542     540       2     923     850\n 4  2013    17 3.05     5.57     1     1     544     545      -1    1004    1022\n 5  2013    19 1.93     9.83     1     1     554     600      -6     812     837\n 6  2013   -16 2.5     -6.4      1     1     554     558      -4     740     728\n 7  2013   -24 2.63    -9.11     1     1     555     600      -5     913     854\n 8  2013    11 0.883   12.5      1     1     557     600      -3     709     723\n 9  2013     5 2.33     2.14     1     1     557     600      -3     838     846\n10  2013   -10 2.3     -4.35     1     1     558     600      -2     753     745\n# … with 336,766 more rows, 11 more variables: arr_delay <dbl>, carrier <chr>,\n#   flight <int>, tailnum <chr>, origin <chr>, dest <chr>, air_time <dbl>,\n#   distance <dbl>, hour <dbl>, minute <dbl>, time_hour <dttm>, and abbreviated\n#   variable names ¹​gain_per_hour, ²​dep_time, ³​sched_dep_time, ⁴​dep_delay,\n#   ⁵​arr_time, ⁶​sched_arr_time\n```\n:::\n:::\n\n\n### Useful creation functions\n\n::: {.cell}\n\n```{.r .cell-code}\ntransmute(flights,\n          dep_time,\n          hour = dep_time %/% 100,\n          minute = dep_time %% 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 3\n   dep_time  hour minute\n      <int> <dbl>  <dbl>\n 1      517     5     17\n 2      533     5     33\n 3      542     5     42\n 4      544     5     44\n 5      554     5     54\n 6      554     5     54\n 7      555     5     55\n 8      557     5     57\n 9      557     5     57\n10      558     5     58\n# … with 336,766 more rows\n```\n:::\n:::\n\n\n### Missing values\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% \n  group_by(year, month, day) %>% \n  summarise(mean = mean(dep_delay))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year', 'month'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 365 × 4\n# Groups:   year, month [12]\n    year month   day  mean\n   <int> <int> <int> <dbl>\n 1  2013     1     1    NA\n 2  2013     1     2    NA\n 3  2013     1     3    NA\n 4  2013     1     4    NA\n 5  2013     1     5    NA\n 6  2013     1     6    NA\n 7  2013     1     7    NA\n 8  2013     1     8    NA\n 9  2013     1     9    NA\n10  2013     1    10    NA\n# … with 355 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>% \n  group_by(year, month, day) %>% \n  summarise(mean = mean(dep_delay), na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year', 'month'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 365 × 5\n# Groups:   year, month [12]\n    year month   day  mean na.rm\n   <int> <int> <int> <dbl> <lgl>\n 1  2013     1     1    NA TRUE \n 2  2013     1     2    NA TRUE \n 3  2013     1     3    NA TRUE \n 4  2013     1     4    NA TRUE \n 5  2013     1     5    NA TRUE \n 6  2013     1     6    NA TRUE \n 7  2013     1     7    NA TRUE \n 8  2013     1     8    NA TRUE \n 9  2013     1     9    NA TRUE \n10  2013     1    10    NA TRUE \n# … with 355 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# filter & is.na 사용용\nnot_cancelled <- flights %>% \n  filter(!is.na(dep_delay), !is.na(arr_delay))\n\n# drop_na 사용\nnot_cancelled_drop <- flights %>% \n  drop_na(dep_delay, arr_delay)\n\nnot_cancelled %>% \n  group_by(year, month, day) %>% \n  summarise(mean = mean(dep_delay))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year', 'month'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 365 × 4\n# Groups:   year, month [12]\n    year month   day  mean\n   <int> <int> <int> <dbl>\n 1  2013     1     1 11.4 \n 2  2013     1     2 13.7 \n 3  2013     1     3 10.9 \n 4  2013     1     4  8.97\n 5  2013     1     5  5.73\n 6  2013     1     6  7.15\n 7  2013     1     7  5.42\n 8  2013     1     8  2.56\n 9  2013     1     9  2.30\n10  2013     1    10  2.84\n# … with 355 more rows\n```\n:::\n:::\n\n\n### Grouping by multiple variables\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily <- flights %>% group_by(year, month, day)\nflights\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1     1      517        515       2     830     819      11 UA     \n 2  2013     1     1      533        529       4     850     830      20 UA     \n 3  2013     1     1      542        540       2     923     850      33 AA     \n 4  2013     1     1      544        545      -1    1004    1022     -18 B6     \n 5  2013     1     1      554        600      -6     812     837     -25 DL     \n 6  2013     1     1      554        558      -4     740     728      12 UA     \n 7  2013     1     1      555        600      -5     913     854      19 B6     \n 8  2013     1     1      557        600      -3     709     723     -14 EV     \n 9  2013     1     1      557        600      -3     838     846      -8 B6     \n10  2013     1     1      558        600      -2     753     745       8 AA     \n# … with 336,766 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n\n```{.r .cell-code}\ndaily\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 336,776 × 19\n# Groups:   year, month, day [365]\n    year month   day dep_time sched_de…¹ dep_d…² arr_t…³ sched…⁴ arr_d…⁵ carrier\n   <int> <int> <int>    <int>      <int>   <dbl>   <int>   <int>   <dbl> <chr>  \n 1  2013     1     1      517        515       2     830     819      11 UA     \n 2  2013     1     1      533        529       4     850     830      20 UA     \n 3  2013     1     1      542        540       2     923     850      33 AA     \n 4  2013     1     1      544        545      -1    1004    1022     -18 B6     \n 5  2013     1     1      554        600      -6     812     837     -25 DL     \n 6  2013     1     1      554        558      -4     740     728      12 UA     \n 7  2013     1     1      555        600      -5     913     854      19 B6     \n 8  2013     1     1      557        600      -3     709     723     -14 EV     \n 9  2013     1     1      557        600      -3     838     846      -8 B6     \n10  2013     1     1      558        600      -2     753     745       8 AA     \n# … with 336,766 more rows, 9 more variables: flight <int>, tailnum <chr>,\n#   origin <chr>, dest <chr>, air_time <dbl>, distance <dbl>, hour <dbl>,\n#   minute <dbl>, time_hour <dttm>, and abbreviated variable names\n#   ¹​sched_dep_time, ²​dep_delay, ³​arr_time, ⁴​sched_arr_time, ⁵​arr_delay\n```\n:::\n\n```{.r .cell-code}\n(per_day   <- daily %>% summarise(flights = n()))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year', 'month'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 365 × 4\n# Groups:   year, month [12]\n    year month   day flights\n   <int> <int> <int>   <int>\n 1  2013     1     1     842\n 2  2013     1     2     943\n 3  2013     1     3     914\n 4  2013     1     4     915\n 5  2013     1     5     720\n 6  2013     1     6     832\n 7  2013     1     7     933\n 8  2013     1     8     899\n 9  2013     1     9     902\n10  2013     1    10     932\n# … with 355 more rows\n```\n:::\n\n```{.r .cell-code}\n(per_month <- per_day %>% summarise(flights = sum(flights)))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n# Groups:   year [1]\n    year month flights\n   <int> <int>   <int>\n 1  2013     1   27004\n 2  2013     2   24951\n 3  2013     3   28834\n 4  2013     4   28330\n 5  2013     5   28796\n 6  2013     6   28243\n 7  2013     7   29425\n 8  2013     8   29327\n 9  2013     9   27574\n10  2013    10   28889\n11  2013    11   27268\n12  2013    12   28135\n```\n:::\n\n```{.r .cell-code}\n(per_year  <- per_month %>% summarise(flights = sum(flights)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n   year flights\n  <int>   <int>\n1  2013  336776\n```\n:::\n:::\n\n \n### Ungrouping\n\n::: {.cell}\n\n```{.r .cell-code}\ndaily %>% \n  ungroup() %>% \n  summarise(flights = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  flights\n    <int>\n1  336776\n```\n:::\n:::\n\n\n## Grouped mutates (and filters)\n- Find the worst members of each group\n- 년/월/일자별 가장 arr_delay가 높은 10개 비행 추출\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflights %>%\n  group_by(year, month, day) %>%\n  filter(rank(desc(arr_delay)) < 11) %>%\n  select(year, month, day, arr_delay) %>%\n  arrange(year, month, day, desc(arr_delay))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3,691 × 4\n# Groups:   year, month, day [365]\n    year month   day arr_delay\n   <int> <int> <int>     <dbl>\n 1  2013     1     1       851\n 2  2013     1     1       456\n 3  2013     1     1       338\n 4  2013     1     1       263\n 5  2013     1     1       250\n 6  2013     1     1       246\n 7  2013     1     1       222\n 8  2013     1     1       191\n 9  2013     1     1       174\n10  2013     1     1       166\n# … with 3,681 more rows\n```\n:::\n\n```{.r .cell-code}\n# slice_max, slice_min 활용\nflights %>% \n  group_by(year, month, day) %>% \n  slice_max(arr_delay, n = 10) %>% \n  select(year, month, day, arr_delay)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3,697 × 4\n# Groups:   year, month, day [365]\n    year month   day arr_delay\n   <int> <int> <int>     <dbl>\n 1  2013     1     1       851\n 2  2013     1     1       456\n 3  2013     1     1       338\n 4  2013     1     1       263\n 5  2013     1     1       250\n 6  2013     1     1       246\n 7  2013     1     1       222\n 8  2013     1     1       191\n 9  2013     1     1       174\n10  2013     1     1       166\n# … with 3,687 more rows\n```\n:::\n\n```{.r .cell-code}\n# Quiz: 연도와 월별로 arr_delay가 가장 큰 3개 날짜 추출\nflights %>% \n  group_by(year, month) %>% \n  slice_max(arr_delay, n = 3) %>% \n  select(year, month, day, arr_delay)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 37 × 4\n# Groups:   year, month [12]\n    year month   day arr_delay\n   <int> <int> <int>     <dbl>\n 1  2013     1     9      1272\n 2  2013     1    10      1109\n 3  2013     1     1       851\n 4  2013     2    10       834\n 5  2013     2    24       773\n 6  2013     2    19       767\n 7  2013     3    17       915\n 8  2013     3    18       784\n 9  2013     3    18       506\n10  2013     4    10       931\n# … with 27 more rows\n```\n:::\n:::\n\n\n- `dest`(도착공항) 그룹화 후 10000대 이상 착륙한 공항 비행정보 추출\n\n::: {.cell}\n\n```{.r .cell-code}\npopular_dests <- flights %>% \n  group_by(dest) %>% \n  filter(n() > 10000)\n\nunique(flights$dest)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"IAH\" \"MIA\" \"BQN\" \"ATL\" \"ORD\" \"FLL\" \"IAD\" \"MCO\" \"PBI\" \"TPA\" \"LAX\" \"SFO\"\n [13] \"DFW\" \"BOS\" \"LAS\" \"MSP\" \"DTW\" \"RSW\" \"SJU\" \"PHX\" \"BWI\" \"CLT\" \"BUF\" \"DEN\"\n [25] \"SNA\" \"MSY\" \"SLC\" \"XNA\" \"MKE\" \"SEA\" \"ROC\" \"SYR\" \"SRQ\" \"RDU\" \"CMH\" \"JAX\"\n [37] \"CHS\" \"MEM\" \"PIT\" \"SAN\" \"DCA\" \"CLE\" \"STL\" \"MYR\" \"JAC\" \"MDW\" \"HNL\" \"BNA\"\n [49] \"AUS\" \"BTV\" \"PHL\" \"STT\" \"EGE\" \"AVL\" \"PWM\" \"IND\" \"SAV\" \"CAK\" \"HOU\" \"LGB\"\n [61] \"DAY\" \"ALB\" \"BDL\" \"MHT\" \"MSN\" \"GSO\" \"CVG\" \"BUR\" \"RIC\" \"GSP\" \"GRR\" \"MCI\"\n [73] \"ORF\" \"SAT\" \"SDF\" \"PDX\" \"SJC\" \"OMA\" \"CRW\" \"OAK\" \"SMF\" \"TUL\" \"TYS\" \"OKC\"\n [85] \"PVD\" \"DSM\" \"PSE\" \"BHM\" \"CAE\" \"HDN\" \"BZN\" \"MTJ\" \"EYW\" \"PSP\" \"ACK\" \"BGR\"\n [97] \"ABQ\" \"ILM\" \"MVY\" \"SBN\" \"LEX\" \"CHO\" \"TVC\" \"ANC\" \"LGA\"\n```\n:::\n\n```{.r .cell-code}\nunique(popular_dests$dest)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"MIA\" \"ATL\" \"ORD\" \"FLL\" \"MCO\" \"LAX\" \"SFO\" \"BOS\" \"CLT\"\n```\n:::\n\n```{.r .cell-code}\nflights %>% \n  group_by(dest) %>% \n  summarise(count = n()) %>% \n  filter(count > 10000)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 2\n  dest  count\n  <chr> <int>\n1 ATL   17215\n2 BOS   15508\n3 CLT   14064\n4 FLL   12055\n5 LAX   16174\n6 MCO   14082\n7 MIA   11728\n8 ORD   17283\n9 SFO   13331\n```\n:::\n:::\n\n- Standardize to compute per group metrics:\n\n::: {.cell}\n\n```{.r .cell-code}\ntmp <- popular_dests %>% \n  group_by(month) %>% \n  filter(arr_delay > 0) %>% \n  mutate(prop_delay = arr_delay / sum(arr_delay)) %>% \n  select(year:day, dest, arr_delay, prop_delay)\n\ntmp\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50,245 × 6\n# Groups:   month [12]\n    year month   day dest  arr_delay prop_delay\n   <int> <int> <int> <chr>     <dbl>      <dbl>\n 1  2013     1     1 MIA          33  0.000299 \n 2  2013     1     1 ORD          12  0.000109 \n 3  2013     1     1 FLL          19  0.000172 \n 4  2013     1     1 ORD           8  0.0000726\n 5  2013     1     1 LAX           7  0.0000635\n 6  2013     1     1 ATL          12  0.000109 \n 7  2013     1     1 ORD          32  0.000290 \n 8  2013     1     1 SFO          14  0.000127 \n 9  2013     1     1 MIA           5  0.0000454\n10  2013     1     1 LAX          29  0.000263 \n# … with 50,235 more rows\n```\n:::\n:::\n\n\n- example\n\n::: {.cell}\n\n```{.r .cell-code}\ngrade <- tibble(name = c(\"Paul\", \"James\", \"Durant\", \"Harden\", \"Jordan\"),\n                region = c(\"West\", \"West\", \"East\", \"East\", \"East\"),\n                score = c(95, 91, 87, 89, 100))\n\n# Group_by 하지 않았을 때\nscore_proportion <- grade %>% \n  mutate(prop_score = score / sum(score))\n\nscore_proportion\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n  name   region score prop_score\n  <chr>  <chr>  <dbl>      <dbl>\n1 Paul   West      95      0.206\n2 James  West      91      0.197\n3 Durant East      87      0.188\n4 Harden East      89      0.193\n5 Jordan East     100      0.216\n```\n:::\n\n```{.r .cell-code}\nsum(score_proportion$prop_score)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\n# region별 Group\nscore_proportion_region <- grade %>% \n  group_by(region) %>% \n  mutate(prop_score = score / sum(score))\n\nscore_proportion_region\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 4\n# Groups:   region [2]\n  name   region score prop_score\n  <chr>  <chr>  <dbl>      <dbl>\n1 Paul   West      95      0.511\n2 James  West      91      0.489\n3 Durant East      87      0.315\n4 Harden East      89      0.322\n5 Jordan East     100      0.362\n```\n:::\n\n```{.r .cell-code}\nsum(score_proportion_region$prop_score)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}